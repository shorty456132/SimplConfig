/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE         

Digital_Input ClearSourceSubpage;
Analog_Input NumberOfSources; 

String_Input SourceSubpage[8][100],SourceName[8][100];                            
Digital_Input SourcePush[8],DestPush[8];                            
Analog_Input SourceInput[8],DestInput[8],DestFb[8];

String_Output debug, SourceSubpage_fb,Source_Fb[8];  
Analog_Output RouteToDest[8];


nonVolatile integer sourceTemp, destTemp, sourceSubTemp,sourceInputTemp[8],DestOutputTemp[8],isourceTemp[8];

Push SourcePush
{    
	integer i;
	sourceTemp = getLastModifiedArrayIndex();
	for(i = 1 to 8)
	{
		if(i = sourceTemp)
		{   
			MakeString(SourceSubpage_Fb,"%s",lower(SourceSubpage[sourceTemp]));
			SourceInputTemp[sourceTemp] = SourceInput[sourceTemp];
		}
	}	
}

Push DestPush
{ 
	integer iDest;

	destTemp = getLastModifiedArrayIndex();
	for(iDest = 1 to 8)
	{
		if(iDest = destTemp)
		{ 
			DestOutputTemp[destTemp] = DestInput[destTemp];
			RouteToDest[DestOutputTemp[destTemp]] = sourceInput[sourceTemp];
		}
	}
} 

Push ClearSourceSubpage
{
	MakeString(SourceSubpage_Fb,"clear");
}
 
change DestFb
{   
	integer i, iDestFb, iSourceFb; 
	iDestFb = getLastModifiedArrayIndex();
	   
	for(i = 1 to 8)
	{  	
		if(SourceInput[i] = DestFb[iDestFb])	//find the index of sourceInput that matches DestFb[iDestFb]  
		{             
		   	if(i <= NumberOfSources) 
		   	{
		    	iSourceFb = SourceInput[i];
		    	MakeString(Source_Fb[DestTemp],"%s",SourceName[i]);
            }
            else
            {
            	MakeString(debug,"SourceInput[%d] Is Grater than the number of sources",i);
            }		
		}		
	}
}   

change SourceInput
{
	integer i, iArray;
	
	iArray = getLastModifiedArrayIndex();
	
	for(i = 1 to 8)
	{
		if(i = iArray)
		{
			iSourceTemp[i] = SourceInput[iArray];
			makestring(debug,"iSourceTemp[%d] = %d",i,iSourceTemp[i]);
		} 
	}
} 


